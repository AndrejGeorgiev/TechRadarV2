datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password   Password?
  Technology Technology[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model WhereToTryTechnology {
  id String @id @default(cuid())

  whereToTry String // CHECK IN (CODE_CAMP, INTERNS, PROJECT)

  technology   Technology @relation(fields: [technologyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  technologyId String
}

model Technology {
  id String @id @default(cuid())

  entryDate        DateTime @updatedAt
  name String
  linkToTechnology String

  enteredBy User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String

  description String

  whereToTryTechnology WhereToTryTechnology[]

  assesmentResult   TechnologyAssessmentResult @relation(fields: [assesmentResultId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  assesmentResultId String

  type String // check in [tools, languages, platforms, techniques]
  currentViabilityLevel String @default("HOLD") // check in [hold, adopt, assess, trial]
}

model TechnologyAssessmentResult {
  id String @id @default(cuid())

  // fill out eventually
  Technology Technology[]
}
